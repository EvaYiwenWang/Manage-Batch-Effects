"0","# AD data"
"0","data.design.ad = numeric()"
"0","data.design.ad$group = ad.trt"
"2","Coercing LHS to a list"
"0","data.design.ad$batch = ad.batch"
"0","# before"
"0","# conditioning on a batch effect"
"0","rda.ad.before1 = rda(ad.tss.clr ~ group + Condition(batch), data = data.design.ad)"
"0","rda.ad.before2 = rda(ad.tss.clr ~ batch + Condition(group), data = data.design.ad)"
"0","# amount of variance"
"0","rda.prop.bat.ad.before = rda.ad.before1$pCCA$tot.chi*100/rda.ad.before1$tot.chi"
"0","rda.prop.trt.ad.before = rda.ad.before2$pCCA$tot.chi*100/rda.ad.before1$tot.chi"
"0","# BMC"
"0","# conditioning on a batch effect"
"0","rda.ad.bmc1 = rda(ad.bmc ~ group + Condition(batch), data = data.design.ad)"
"0","rda.ad.bmc2 = rda(ad.bmc ~ batch + Condition(group), data = data.design.ad)"
"0","# amount of variance"
"0","rda.prop.bat.ad.bmc = rda.ad.bmc1$pCCA$tot.chi*100/rda.ad.bmc1$tot.chi"
"0","rda.prop.trt.ad.bmc = rda.ad.bmc2$pCCA$tot.chi*100/rda.ad.bmc2$tot.chi"
"0","# combat"
"0","# conditioning on a batch effect"
"0","rda.ad.combat1 = rda(ad.combat ~ group + Condition(batch), data = data.design.ad)"
"0","rda.ad.combat2 = rda(ad.combat ~ batch + Condition(group), data = data.design.ad)"
"0","# amount of variance"
"0","rda.prop.bat.ad.combat = rda.ad.combat1$pCCA$tot.chi*100/rda.ad.combat1$tot.chi"
"0","rda.prop.trt.ad.combat = rda.ad.combat2$pCCA$tot.chi*100/rda.ad.combat2$tot.chi"
"0","# limma"
"0","# conditioning on a batch effect"
"0","rda.ad.limma1 = rda(ad.limma ~ group + Condition(batch), data = data.design.ad)"
"0","rda.ad.limma2 = rda(ad.limma ~ batch + Condition(group), data = data.design.ad)"
"0","# amount of variance"
"0","rda.prop.bat.ad.limma = rda.ad.limma1$pCCA$tot.chi*100/rda.ad.limma1$tot.chi"
"0","rda.prop.trt.ad.limma = rda.ad.limma2$pCCA$tot.chi*100/rda.ad.limma2$tot.chi"
"0","# percentile"
"0","# conditioning on a batch effect"
"0","rda.ad.percentile1 = rda(ad.percentile ~ group + Condition(batch), data = data.design.ad)"
"0","rda.ad.percentile2 = rda(ad.percentile ~ batch + Condition(group), data = data.design.ad)"
"0","# amount of variance"
"0","rda.prop.bat.ad.percentile = rda.ad.percentile1$pCCA$tot.chi*100/rda.ad.percentile1$tot.chi"
"0","rda.prop.trt.ad.percentile = rda.ad.percentile2$pCCA$tot.chi*100/rda.ad.percentile2$tot.chi"
"0","# SVD"
"0","# conditioning on a batch effect"
"0","rda.ad.svd1 = rda(ad.svd ~ group + Condition(batch), data = data.design.ad)"
"0","rda.ad.svd2 = rda(ad.svd ~ batch + Condition(group), data = data.design.ad)"
"0","# amount of variance"
"0","rda.prop.bat.ad.svd = rda.ad.svd1$pCCA$tot.chi*100/rda.ad.svd1$tot.chi"
"0","rda.prop.trt.ad.svd = rda.ad.svd2$pCCA$tot.chi*100/rda.ad.svd2$tot.chi"
"0","# RUVIII"
"0","# conditioning on a batch effect"
"0","rda.ad.ruv1 = rda(ad.ruv ~ group + Condition(batch), data = data.design.ad)"
"0","rda.ad.ruv2 = rda(ad.ruv ~ batch + Condition(group), data = data.design.ad)"
"0","# amount of variance"
"0","rda.prop.bat.ad.ruv = rda.ad.ruv1$pCCA$tot.chi*100/rda.ad.ruv1$tot.chi"
"0","rda.prop.trt.ad.ruv = rda.ad.ruv2$pCCA$tot.chi*100/rda.ad.ruv2$tot.chi"
